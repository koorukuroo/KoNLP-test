data(iris)
summary(iris)
vignette("ggplot")
vignette("ggplot2")
install.packages("svm")
install.packages("party")
library(party)
vignette("party")
v1<-c(1,3,5,7,9,11,20)
v1*v1
(v2<-v1+v1^2)
(v3<-1+v1+v1^3)
mean(v1)
median(v1)
sd(v1)
var(v1)
sum((v1-mean(v1))^2)/(length(v1)-1)
cor(v1,v2)
cor(v1,v3)
v4<-as.data.frame(v1)
v4<-as.data.frame(v1)
write.csv(v4,"v4.csv")
v5<-read.csv("v4.csv")
v5
v6<-as.vector(v4)
v6
v7<-as.vector(v5)
v7
v7<-as.vector(v5$v1)
v7
v6==v7
v8<-as.list(v6)
v8
v8<-as.list(v4)
v9<-as.list(v5)
(v8<-as.list(v4))
(v9<-as.list(v5))
v8$v1==v9$v1
v8[[1]]==v9[[2]]
as.matrix(v4)
as.matrix(v4,2,4)
as.matrix(v4,c(2,4)
)
as.matrix(v4,c(2,3))
as.matrix(c(v4,0),c(2,4))
c(v4,0)
c(v1,0)
as.matrix(c(v1,0),c(2,4))
v1
c(v1,0)
y<-c("Eric","Tim","Joshua")
y
y<-c("ECG","Eric","Tim","Joshua")
y
c(1+2,2-3,3*4,4/5)
x1<-c(0,1,1)
x2<-c(2,3,5)
(x3<-c(x1,x2))
x1<-c(0,1,1,2,3)
x2<-c(5,8,13,21,34)
(x3<-c(x1,x2))
c(True,False,T,F,1==1,1==0)
c(TRUE,FALSE,T,F,1==1,1==0)
x <- 3
1:x
seq(from=10,to=3,by=2)
seq(from=10,to=3,by=-2)
seq(from=0,to=10,length.out=2)
seq(from=0,to=10,length.out=3)
seq(from=1,to=2,length.out=5)
seq(from=1,to=2,length.out=3)
seq(from=1,to=2,length.out=4)
seq(from=0,to=10,length.out=4)
seq(from=0,to=10,length.out=3)
rep(7,times=5)
rep(7,times=3)
rep(7:8,times=3)
rep(7:8,each=3)
s <- 7:8
rep(s,3)
rep(3,times=3)
rep(s,times=3)
(z<-c(rep(1:2,times=2),rep(7:8,each=2)))
z[1]
d[5]
z[5]
z[3:6]
z[c(2,4,8)]
z[-1]
z[-5]
d[-c(3:6)]
z[-c(3:6)]
z>4
z>3
z[z<10]
z[z>3]
z%%2==0 # %%는 주어진 숫자로 나눈 나머지
z%%3==0 # %%는 주어진 숫자로 나눈 나머지
z%%4==0 # %%는 주어진 숫자로 나눈 나머지
z[z%%4==0]
(z<-c(rep(2:3,times=2),rep(8:9,each=2)))
z[1]
z[5]
z[3:6]
z[c(2,4,8)]
z[-5]
z[-c(3:6)]
z>3
z[z>3]
z%%3==0 # %%는 주어진 숫자로 나눈 나머지
z[z%%3==0]
z[z>=3 & z<9] # &는 and
z[z<=3 | z>8] # |는 or
z[z<3 | z>=9] # |는 or
z[z>=3 & z<9] # &는 and
z[z<3 | z>=9] # |는 or
z<-letters[1:20]
(z<-letters[1:20])
names(z)<-n
names(z)<-1:20
z
z["1"]
z[c("1",3")]
z[c("1","3")]
z[c("1","20")]
(z<-3)
mode(z)
(z<-7)
mode(z)
y<-"Charcter"
mode(y)
x <- c("noun","verb","adjective")
(x <- c("noun","verb","adjective"))
paste("Big","Data")
paste("Big","Data",sep="")
x<-c("Big","Data","Analytics")
paste(c("Advanced","Applied"),x)
z<-c("Advanced","Applied")
y<-c("Data Analytics","Big Data Analytics","BDA")
paste(z,y)
paste(z,"Data Mining")
z<-c("Advanced","Applied")
y<-c("Data Analytics","Big Data Analytics","BDA")
paste(z,y)
paste(y,7)
paste(y,7:8)
paste(y,2014)
paste(y,2014:2015)
y<-2027:2020
y
2014/4
2014:x
x <- 2020
2014:x
seq(from=2020,to=2014,by=-4)
seq(from=2030,to=2014,by=-4)
seq(from=2014,to=2030,length.out=3)
seq(from=2014,to=2030,length.out=5)
seq(from=2014,to=2030,length.out=3)
seq(from=2030,to=2020,length.out=4)
seq(from=2030,to=2014,by=4)
seq(from=2030,to=2014,length.out=4)
seq(from=2030,to=2014,by=-4)
seq(from=2030,to=2014,length.out=5)
rep(2020,times=3)
rep(2014:2015,times=3)
rep(14:15,times=3)
rep(14:15,each=3)
rep(2020,times=3)
rep(7,times=3)
rep(7:8,times=3)
rep(7:8,each=3)
seq(from=30,to=14,by=-4)
seq(from=30,to=14,length.out=5)
seq(from=14,to=30,length.out=5)
seq(from=14,to=30,by=4)
seq(from=14,to=30,length.out=5)
seq(from=30,to=14,by=-4)
seq(from=30,to=14,length.out=5)
paste(y,2014:2015)
y<-c("Data Analytics","Big Data Analytics","BDA")
paste(y,2014:2015)
paste("2020","12","31")
paste("2020","12","31",sep="-")
paste("2020","12","31",sep="")
substr("AppliedBDA",8,3)
substr("AppliedBDA",8,10)
z<-"AppliedBDA"
substr(z,nchar(z)-3,nchar(z))
substr(z,nchar(z)-2,nchar(z))
substr("AppliedBDA",8,10)
z<-"AppliedBDA"
substr(z,nchar(z)-2,nchar(z))
y<-c("Advanced","Data","Analytics")
substr(y,1,3)
(t<-TRUE)
(t<-T)
(f<-FALSE)
(f<-F)
z==14
z!=14
z<14
z>14
z<=14
z>=14
thisYear<-2014
thisYear==2020
thisYear!=2020
z<-c(11,21,31,12,22,23)
y<-matrix(z,3,2)
(y<-matrix(z,3,2))
z<-c(11,21,31,12,22,32)
(y<-matrix(z,3,2))
dim(y)
t(y)
y%*%t(y)
diag(y)
colnames(y)<-c("F_col","S_col")
rownames(y)<-c("F_row","S_row","T_row")
y
y[1,] #첫째 행
y[,2] #셋째 열
y[c(1,1),c(2,2)]
y[c(1,1),c(2)]
y[c(1,2),c(2)]
y[c(1,2),c(2)] <- 2
y
y + 1
y + 2000
lst_1<-list("Wcup",2018,c(T,T,F),max)
lst_1
z_lst<-list("Wcup",2018,c(T,T,F),max)
z_lst
a <- 1:10
b <- matrix(1:10,2,5)
c <- c("name1","name2")
lst_2<-list(a=a,b=b,c=c)
lst_2
y <- matrix(c(2014,2018,2022,2006,2009,2013),3,2)
y
z <- c("Wcup","WBC")
y <- matrix(c(2014,2018,2022,2006,2009,2013),3,2)
x <- 10:1
lst_2<-list(z=z,y=y,x=x)
lst_2
w_lst<-list(z=z,y=y,x=x)
w_lst
w_lst$z
lst_z<-list("Wcup",2018,c(T,T,F),max)
e1 <- c("Wcup","WBC")
e2 <- matrix(c(2014,2018,2022,2006,2009,2013),3,2)
e3 <- 10:1
lst_y<-list(e1=e1,e2=e2,e3=e3)
lst_y
lst_x<-c(lst_z,lst_y)
lst_x
unlist(lst_x)
class(unlist(lst_x))
z<-c(1,2,3,4)
y<-c("GER","ARG","NED","BRA")
x=data.frame(z,y)
x
c[1,2]
x[1,2]
x[,"a"]
x[,"y"]
x$y
rnk<-c(1,2,3,4)
team<-c("GER","ARG","NED","BRA")
wcup=data.frame(rnk,team)
wcup
wcup[1,2]
wcup[,"team"]
wcup$team
wcup[wcup$rnk==2,]
wcup[wcup$rnk==4,]
data(airquality)
head(airquality) # 처음 6개 observation 조회
table(airquality$Month)
table(airquality$Month)
newRow<-data.frame(Ozone=40 Solar.R=120 Wind=8 Temp=77 Month=10 Day=1)
head(airquality) # 처음 6개 observation 조회
newRow<-data.frame(Ozone=40 Solar_R=120 Wind=8 Temp=77 Month=10 Day=1)
str(airquality)
newRow<-data.frame(Ozone=40. Solar.R=120. Wind=8. Temp=77. Month=10. Day=1)
newRow<-data.frame(Ozone=40, Solar.R=120, Wind=8, Temp=77, Month=10, Day=1)
newRow
new_aq<-rbind(airquality,newRow)
tail(new_aq) # 마지막 6개 observation 조회
dim(new_aq)
newCol<-1:nrow(new_aq)
new_aq_R<-rbind(airquality,newRow)
tail(new_aq_R) # 마지막 6개 observation 조회
dim(new_aq_R)
newCol<-1:nrow(new_aq_R)
new_aq_RC<-cbind(new_aq_R,newCol)
head(new_aq_RC,2) # 처음 2개 observation 조회
tail(new_aq_RC,2) # 처음 2개 observation 조회
subset(airquality,select=c(Ozone,Solar.R),subset=(Wind>10.0 & Temp>70.0))
subset(airquality,select=c(Ozone,Solar.R),subset=(Wind>10.0 & Temp>80.0))
subset(airquality,select=c(Ozone,Solar.R,Month),subset=(Wind>15.0 & Temp>80.0))
subset(airquality,select=c(Ozone,Solar.R,Month),subset=(Wind>11.0 & Temp>80.0))
subset(airquality,select=c(Ozone,Solar.R,Wind,Temp),subset=(Wind>12.0 & Temp>80.0))
subset(airquality,select=c(Ozone,Solar.R,Wind,Temp),subset=(Wind>15.0 | Temp>80.0))
subset(airquality,select=c(Ozone,Solar.R,Wind,Temp),subset=(Wind>15.0 | Temp>90.0))
subset(airquality,select=c(Ozone,Solar.R,Wind,Temp),subset=(Wind>20.0 | Temp>90.0))
subset(airquality,select=c(Ozone,Solar.R,Wind,Temp),subset=(Wind>20.0 | Temp>95.0))
subset(airquality,select=c(Ozone,Solar.R,Wind,Temp),subset=(Wind>12.0 & Temp>80.0))
aq_1<-subset(airquality,select=c(Ozone,Wind,Month,Day),subset=(Wind>12.0 & Temp>80.0))
aq_2<-subset(airquality,select=c(Solar.R,Temp,Month,Day),subset=(Wind>12.0 & Temp>80.0))
head(aq_1)
head(aq_2)
mrg_aq<-merge(aq_1,aq_2,by=c("Month","Day")]
mrg_aq<-merge(aq_1,aq_2,by=c("Month","Day"))
head(mrg_aq)
table(mrg_aq$Ozone==aq_1$Ozone)
table(mrg_aq$Solar.R==aq_1$Solar.R)
table(mrg_aq$Solar.R==aq_2$Solar.R)
head(mrg_aq)
aq_1
aq_2
mrg_aq<-merge(aq_1,aq_2,by=c("Month","Day"))
mrg_aq
?merge
mrg_aq<-merge(aq_1,aq_2,by=c("Month","Day"),sort = TRUE)
mrg_aq
str(mrg_aq)
mrg_aq<-merge(aq_1,aq_2,by=c("Month","Day"),sort = TRUE)
str(mrg_aq)
?merge
mrg_aq
mrg_aq<-merge(aq_1,aq_2,by=c("Month","Day"),sort = F)
mrg_aq
?subset
aq_1<-subset(airquality,select=c(Ozone,Wind,Month,Day),subset=(Wind>12.0 & Temp>80.0),sort = F)
?subset
aq_1
aq_2<-subset(airquality,select=c(Solar.R,Temp,Month,Day),subset=(Wind>12.0 & Temp>80.0),sort = F)
aq_2
mrg_aq<-merge(aq_1,aq_2,by=c("Month","Day"),sort = F)
mrg_aq
table(mrg_aq$Ozone==aq_1$Ozone)
table(mrg_aq$Solar.R==aq_2$Solar.R)
mrg_aq$Ozone==aq_1$Ozone
mrg_aq$Ozone==aq_1$Ozone
mrg_aq$Solar.R==aq_2$Solar.R
mil_song<-read.txt("http://labrosa.ee.columbia.edu/millionsong/sites/default/files/AdditionalFiles/unique_tracks.txt")
?readcsv
?read.csv
mil_song<-read.delim("http://labrosa.ee.columbia.edu/millionsong/sites/default/files/AdditionalFiles/unique_tracks.txt",sep = "<SEP>")
mil_song<-read.table("http://labrosa.ee.columbia.edu/millionsong/sites/default/files/AdditionalFiles/unique_tracks.txt",sep = "<SEP>")
mil_song<-read.table("http://labrosa.ee.columbia.edu/millionsong/sites/default/files/AdditionalFiles/unique_tracks.txt")
mil_song<-read.txt("http://labrosa.ee.columbia.edu/millionsong/sites/default/files/AdditionalFiles/unique_tracks.txt")
mil_song<-readtxt("http://labrosa.ee.columbia.edu/millionsong/sites/default/files/AdditionalFiles/unique_tracks.txt")
mil_song<-read.csv("http://labrosa.ee.columbia.edu/millionsong/sites/default/files/AdditionalFiles/unique_tracks.txt")
library(Ecdat)
data(Garch)
Garch
mil_song<-read.delim("http://www.amstat.org/publications/jse/datasets/movietotal.dat.txt", sep = "\t")
head(mil_song)
head(amstat_movie[grep("Beaut",amstat_movie$MOVIE, ignore.case=F),"MOVIE"])
amstat_movie<-read.delim("http://www.amstat.org/publications/jse/datasets/movietotal.dat.txt", sep = "\t")
head(amstat_movie[grep("Beaut",amstat_movie$MOVIE, ignore.case=F),"MOVIE"])
str(amstat_movie)
amstat_movie$MOVIE<-as.character(amstat_movie$MOVIE)
head(amstat_movie[grep("Beaut",amstat_movie$MOVIE, ignore.case=F),"MOVIE"])
grep("main",movies$title)
amstat_movie[grep("Beaut",amstat_movie$MOVIE, ignore.case=F),"MOVIE"]
View(amstat_movie)
amstat_movie[grep("beaut",amstat_movie$MOVIE, ignore.case=F),"MOVIE"]
amstat_movie[grep("beaut",amstat_movie$MOVIE, ignore.case=T),"MOVIE"]
amstat_movie[grep("in",amstat_movie$MOVIE, ignore.case=F),"MOVIE"]
amstat_movie[grep("in",amstat_movie$MOVIE, ignore.case=T),"MOVIE"]
grep("in",amstat_movie$MOVIE, ignore.case=F)
amstat_movie[grep("in",amstat_movie$MOVIE, ignore.case=F),"MOVIE"]
amstat_movie[grep("in",amstat_movie$MOVIE, ignore.case=T),"MOVIE"]
z<-c(1,3,5,7,9,11,20)
z*z
(y<-z+z^2)
(x<-1+z+z^3)
mean(z)
median(z)
sd(z)
var(z)
sum((z-mean(z))^2)/(length(z)-1)
cor(z,y)
cor(z,x)
w<-as.data.frame(z)
write.csv(w,"w.csv")
v<-read.csv("w.csv")
v
u<-as.vector(w)
t<-as.vector(v$z)
v==t
z
w
u<-as.vector(w)
u
as.vector(v$z)
t
v
rnk<-c(1,2,3,4)
team<-c("GER","ARG","NED","BRA")
wcup=data.frame(rnk,team)
write.csv(wcup,"wcup.csv")
w_cup<-read.csv("wcup.csv")
w_cup
tm<-as.vector(w_cup$team)
rk<-as.vector(w_cup$rnk)
team==tm
rnk==rk
save(rank,team,file="wcup.rdata")
load("wcup.rdata")
(t<-as.list(team))
t$team==wcup$team
(t2<-as.list(wcup$team))
t$team==wcup$team
str(w_cup)
w_cup$team<-as.character(w_cup$team)
(t2<-as.list(wcup$team))
t1$team==t2$team
(t1<-as.list(team))
(t2<-as.list(wcup$team))
w_cup$team<-as.character(w_cup$team)
(t2<-as.list(wcup$team))
(t2<-as.list(w_cup$team))
t1$team==t2$team
t1==t2
summary(wcup) # 열별 data 요약
vignette("party")
summary(w_cup) # 열별 data 요약
options(repos=c(Rstudio='http://rstudio.org/_packages', getOption('repos')))
install.packages('shiny')
library(shiny)
runExample("01_hello")
runExample("02_text")
install.packages("vcd")
library(vcd)
data(Titanic)
str(Titanic)
mosaic(Titanic)
mosaic(Titanic, shade=TRUE, legend=TRUE)
mosaic(HairEyeColor, shade=TRUE, legend=TRUE)
mosaic(Titanic)
mosaic(Titanic, shade=TRUE, legend=TRUE)
mosaic(HairEyeColor, shade=TRUE, legend=TRUE)
strucplot(Titanic, pop=FALSE)
?grid.edit
str(Titanic)
grid.edit("rect:Class=1st,Sex=Male,Age=Adult,Survived=Yes", gp=gpar(fill = "red"))
library(ggplot2)
filepath <- "http://dl.dropbox.com/u/1648032/ggplot2_tutorial_dataset.txt"
myData <- read.table(file=url(filepath), header=T, sep="\t")
str(myData)
myData <- read.table(file=url(filepath), header=T, sep="\t")
filepath <- "https://dl.dropboxusercontent.com/u/1648032/ggplot2_tutorial_dataset.txt"
myData <- read.table(file=url(filepath), header=T, sep="\t")
str(myData)
read.table(file=url(filepath), header=T, sep="\t")
filepath <- "http://dl.dropbox.com/u/1648032/ggplot2_tutorial_dataset.txt"
myData<-read.table(file=url(filepath), header=T, sep="\t")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
rm(list=ls())
data(ChickWeight)
names(ChickWeight)
ggplot(ChickWeight, aes(x=Time,y=weight,colour=Diet,group=Chick))+geom_line()
ggplot(ChickWeight, aes(x=Time,y=weight,colour=Diet))+geom_point(alpha=.3)+geom_smooth(alpha=.2, size=1)
ggplot(ChickWeight, aes(x=Time,y=weight,colour=Diet))+geom_smooth(alpha=.4, size=3)
dim(ChickWeight[ChickWeight$Time==21,])
ggplot(subset(ChickWeight, Time==21), aes(x=weight, colour=Diet)) + geom_density()
ggplot(subset(ChickWeight, Time==21), aes(x=weight, fill=Diet)) + geom_histogram(colour="black", binwidth=50) + facet_grid(Diet~.)
data(mtcars)
names(mtcars)
head(mtcars)
p <- qplot(wt, mpg, colour=hp, data = mtcars)
p + coord_cartesian(ylim = c(0,40))
p + scale_colour_continuous(breaks = c(100,300))
p + coord_cartesian(ylim = c(0,40))
p + scale_colour_continuous(breaks = c(100,300))
p + coord_cartesian(ylim = c(0,40))
p + scale_colour_continuous(breaks = c(100,300))
p + guides(colour = "colourbar")
m <- mtcars[1:10,]
p %+% m
c <- ggplot(mtcars, aes(factor(cyl)))
c + geom_bar()
c + geom_bar(fill = "red")
c + geom_bar(colour = "red")
c + geom_bar(fill = "white", colour = "red")
k <- ggplot(mtcars, aes(factor(cyl), fill=factor(vs)))
k + geom_bar()
names(mtcars)
? mtcars
data(movies)
head(movies)
dim(movies)
m <- ggplot(movies, aes(x = rating))
m + geom_histogram()
m + geom_histogram(aes(fill=..count..))
names(movies)
(z<-letters[1:20])
names(z)<-1:20
z
z["1"]
z[c("1","20")]
Z$1
z$1
(z<-1:20)
names(z)<-letters[1:20]
z$a
