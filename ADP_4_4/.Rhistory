cen_den<-hclust(euc_dist^2,method="centroid")
plot(cen_den, main="Cluster Dendrogram - centroid")
war_den<-hclust(euc_dist^2,method="ward")
plot(war_den, main="Cluster Dendrogram - ward")
library(HDclassif)
data(wine)
# k-means
head(wine)
table(wine$class)
(k_wine <- kmeans(wine[,-c(1)],3))
str(k_wine)
table(k_wine$cluster,wine$class)
plot(wine[,c("V1","V13")], col=k_wine$cluster)
points(k_wine$centers[,c("V1","V13")],col=1:3,pch=8,cex=2)
wine_s<-scale(wine[,-c(1)])
(k_wine_s <- kmeans(wine_s,3))
table(k_wine_s$cluster,wine$class)
plot(wine_s[,c("V1","V13")], col=k_wine_s$cluster)
points(k_wine_s$centers[,c("V1","V13")],col=1:3,pch=8,cex=2)
k_wine_res<-wine
k_wine_res$clst_s<-k_wine_s$cluster
table(k_wine_res$clst_s)
ind<-which(k_wine_res$clst_s==1)
summary(k_wine_res[ind,])
table(k_wine_res[ind,"class"])
# pam
library(cluster)
(pam_wine <- pam(wine[,-c(1)],3))
table(pam_wine$cluster,wine$class)
plot(wine[,c("V1","V13")], col=pam_wine$cluster)
points(pam_wine$medoids[,c("V1","V13")],col=1:3,pch=8,cex=2)
pam_wine_s <- pam(wine_s,3)
table(pam_wine_s$cluster,wine$class)
plot(wine_s[,c("V1","V13")], col=pam_wine_s$cluster)
points(pam_wine_s$medoids[,c("V1","V13")],col=1:3,pch=8,cex=2)
# Density-based Clustering
# install.packages("fpc")
library(fpc)
(den_wine_s <- dbscan(wine_s, eps=2.6, MinPts=10, scale=TRUE))
table(den_wine_s$cluster,wine$class)
(den_wine_s1 <- dbscan(wine_s, eps=2.5, MinPts=8, scale=TRUE))
table(den_wine_s1$cluster,wine$class)
str(den_wine_s1)
plot(den_wine_s,wine_s[,c("V1","V13")])
# Fuzzy Clustering
set.seed(2014)
f1<-cbind(rnorm(10, -5, 0.5), rnorm(10, -5, 0.5))
f2<-cbind(rnorm(10, 5, 0.5), rnorm(10, 5, 0.5))
f3<-cbind(rnorm(5, 0.5*1.67, 0.5), rnorm(5, 0.5*1.67, 0.5))
f<-rbind(f1,f2,f3)
(fuz_f_2 <- fanny(f,2))
(fuz_f_3 <- fanny(f,3))
plot(fuz_f_2)
wss<-0
for(i in 1:15) wss[i]<-sum(kmeans(wine_s,centers=i)$withinss)
plot(1:15,wss,type="b",xlab="Number of Cluster", ylab="Within group sum of squares")
str(k_wine)
wss<-0
for(i in 1:15) wss[i]<-kmeans(wine_s,centers=i)$tot.withinss
plot(1:15,wss,type="b",xlab="Number of Cluster", ylab="Within group sum of squares")
wss<-0
for(i in 1:15) wss[i]<-kmeans(wine_s,centers=i)$betweenss
plot(1:15,wss,type="b",xlab="Number of Cluster", ylab="Within group sum of squares")
library(arules)
data(Groceries)
? Groceries
data(Groceries)
str(Groceries)
library(arules)
str(Groceries)
table(Groceries@data@i)
table(Groceries@data@p)
str(Groceries)
table(Groceries@data@Dim)
table(Groceries@data@i)
table(Groceries@itemInfo)
str(Groceries)
head(Groceries@itemInfo)
table(Groceries@itemInfo[,1])
table(Groceries@itemInfo[,2])
table(Groceries@itemInfo[,3])
head(Groceries@itemInfo)
str(Groceries)
table(Groceries@data@i)
?? cluster
library(arules)
? transaction
str(Groceries)
? transactions
?? transactions
inspect(Groceries)
head(inspect(Groceries))
inspect(Groceries)
str(Groceries)
head(Groceries@data@p)
head(Groceries@data)
inspect(Groceries)[1:3]
str(Groceries)
inspect(Groceries)[1:3]
inspect(Groceries)[1:3,]
inspect(Groceries)[[1:3]]
inspect(Groceries)[[1]]
summary(Groceries)
Groceries[c(1:3),c(1:3)]
inspect(Groceries[c(1:3),c(1:3)])
inspect(Groceries[c(1:3),c(1:20)])
inspect(Groceries[c(1:3),c(1:100)])
inspect(Groceries[c(1:3),c(1:169)])
summary(Groceries)
image(Groceries)
summary(Groceries)
inspect(Groceries[c(1:3),c(1:169)])
inspect(Groceries[c(1:5),c(1:169)])
? Groceries
str(Groceries)
table(Groceries@data@i)
table(Groceries@data@p)
table(Groceries@data@Dim)
table(Groceries@data@Dim)
head(Groceries@itemInfo)
table(Groceries@itemInfo[,1])
table(Groceries@itemInfo[,2])
table(Groceries@itemInfo[,3])
inspect(Groceries)
summary(Groceries)
inspect(Groceries[c(1:5),c(1:169)])
length(Groceries)
inspect(Groceries[c(1:5),])
length(Groceries)
nrow(Groceries)
ncol(Groceries)
Groceries[c(1:5),]
inspect(head(Groceries))
as(head(Groceries),"list")
transactionInfo(Groceries[size(Groceries) > 30])
transactionInfo(Groceries[size(Groceries) > 5])
transactionInfo(Groceries[size(Groceries) > 4])
transactionInfo(Groceries[size(Groceries) > 3])
transactionInfo(Groceries[size(Groceries) > 0])
transactionInfo(Groceries[size(Groceries) > 0,])
transactionInfo(Groceries[size(Groceries) > 3,])
G_arules<-apriori(Groceries, parameter=list(support=0.01, confidence=0.6))
G_arules<-apriori(Groceries, parameter=list(support=0.01, confidence=0.5))
G_arules<-apriori(Groceries, parameter=list(support=0.01, confidence=0.1))
G_arules<-apriori(Groceries, parameter=list(support=0.001, confidence=0.1))
G_arules<-apriori(Groceries, parameter=list(support=0.01, confidence=0.1))
G_arules<-apriori(Groceries, parameter=list(support=0.01, confidence=0.5))
G_arules
summary(G_arules)
str(G_arules)
inspect(G_arules)
inspect(G_arules)
G_arules<-apriori(Groceries, parameter=list(support=0.01, confidence=0.3))
inspect(G_arules)
inspect(G_arules[,c(4)])
inspect(G_arules[,4])
inspect(G_arules)
str(G_arules)
summary(G_arules@quality$lift)
inspect(G_arules)
(G_rules_yogurt <- subset(G_rules, subset = rhs %in% "yogurt" & lift > 2))
(G_arules_yogurt <- subset(G_arules, subset = rhs %in% "yogurt" & lift > 2))
inspect(G_arules_yogurt)
(G_arules_root_vegetables <- subset(G_arules, subset = rhs %in% "root vegetables" & lift > 2))
inspect(G_arules_root_vegetables)
inspect(head(sort(G_arules_yogurt, by = "confidence"), n = 3))
inspect(head(sort(G_arules_yogurt, by = "lift"), n = 3))
inspect(head(sort(G_arules_yogurt, by = "support"), n = 3))
library(arulesSequences)
install.packages("arulesSequences")
library(arulesSequences)
data(zaki)
?zaki
summary(zaki)
inspect(zaki)
as(zaki,"data.frame")
inspect(head(zaki))
str(zaki)
length(zaki)
ncol(zaki)
z_arules_Seq <- cspade(zaki, parameter = list(support=0.4),control=list(verbose=TRUE))
summary(z_arules_Seq)
as(z_arules_Seq,"data.frame")
inspect(z_arules_Seq)
inspect(head(z_arules_Seq))
as(z_arules_Seq,"data.frame")
str(z_arules_Seq)
(G_arules_root_vegetables <- subset(G_arules, subset = rhs %in% "root vegetables" & lift > 2))
(G_arules_root_vegetables <- subset(G_arules, subset = rhs %in% "root vegetables" & lift > 2))
(G_arules_root_vegetables <- subset(G_arules, subset = rhs %in% "root vegetables" & lift > 2))
(G_arules_root_vegetables <- subset(G_arules, subset = rhs %in% "root vegetables" & lift > 2))
inspect(G_arules_yogurt)
str(G_arules_yogurt)
G_arules_yogurt@lhs
inspect(G_arules_yogurt@lhs)
inspect(G_arules_yogurt@lhs)
inspect(head(zaki))
as(zaki,"data.frame")
install.packages("arulesViz")
library(arulesViz)
G_arulesViz<-apriori(Groceries, parameter=list(support=0.005, confidence=0.3))
G_arulesViz
inspect(G_arules)
inspect(head(G_arules))
inspect(head(G_arulesViz))
inspect(head(G_arulesViz,by="confidence"))
plot(G_arulesViz)
plot(G_arulesViz,interactive=TRUE)
plot(G_arulesViz,interactive=TRUE)
plot(G_arulesViz,interactive=TRUE)
plot(G_arulesViz,interactive=TRUE)
plot(G_arulesViz,interactive=TRUE)
plot(G_arulesViz, measure=c("support", "lift"), shading="confidence", interactive=TRUE)
plot(G_arulesViz, measure=c("support", "lift"), shading="confidence")#, interactive=TRUE)
G_arulesViz_sub <- G_arulesViz[quality(G_arulesViz)$confidence > 0.6]
G_arulesViz_sub
plot(G_arulesViz_sub, method="matrix", measure="lift")
plot(G_arulesViz_sub, method="matrix3D", measure="lift")
plot(G_arulesViz_sub, method="grouped")
G_arulesViz_sub2 <- head(sort(G_arulesViz_sub, by="lift"),10)
plot(G_arulesViz_sub2, method="graph", control=list(type="items"))
plot(G_arulesViz)
G_arulesViz<-apriori(Groceries, parameter=list(support=0.005, confidence=0.3))
G_arulesViz
inspect(head(G_arulesViz,by="confidence"))
plot(G_arulesViz)
library(arulesViz)
G_arulesViz<-apriori(Groceries, parameter=list(support=0.005, confidence=0.3))
G_arulesViz
inspect(head(G_arulesViz,by="confidence"))
plot(G_arulesViz)
plot(G_arulesViz,interactive=TRUE)
G_arulesViz_sub <- G_arulesViz[quality(G_arulesViz)$confidence > 0.6]
G_arulesViz_sub
plot(G_arulesViz_sub, method="matrix", measure="lift")
G_arulesViz_sub <- G_arulesViz[quality(G_arulesViz)$confidence > 0.5]
G_arulesViz_sub
plot(G_arulesViz_sub, method="matrix", measure="lift")
plot(G_arulesViz_sub, method="matrix", measure=c("lift", "confidence"))
plot(G_arulesViz_sub, method="matrix3D", measure="lift")
plot(G_arulesViz_sub, method="grouped")
G_arulesViz_sub2 <- head(sort(G_arulesViz_sub, by="lift"),10)
plot(G_arulesViz_sub2, method="graph", control=list(type="items"))
plot(G_arulesViz, measure=c("support", "lift"), shading="confidence", interactive=TRUE)
G_arulesViz_sub1 <- G_arulesViz[quality(G_arulesViz)$confidence > 0.5]
G_arulesViz_sub1
plot(G_arulesViz_sub1, method="matrix", measure="lift")
plot(G_arulesViz_sub1, method="matrix", measure=c("lift", "confidence"))
plot(G_arulesViz_sub1, method="matrix3D", measure="lift")
plot(G_arulesViz_sub1, method="grouped")
G_arulesViz_sub2 <- head(sort(G_arulesViz_sub, by="lift"),10)
plot(G_arulesViz_sub2, method="graph", control=list(type="items"))
library(arulesViz)
G_arulesViz<-apriori(Groceries, parameter=list(support=0.005, confidence=0.3))
library(arules)
data(Groceries)
library(arulesViz)
G_arulesViz<-apriori(Groceries, parameter=list(support=0.005, confidence=0.3))
G_arulesViz
inspect(head(G_arulesViz,by="confidence"))
plot(G_arulesViz)
G_arulesViz_sub1 <- G_arulesViz[quality(G_arulesViz)$confidence > 0.5]
G_arulesViz_sub1
plot(G_arulesViz_sub1, method="matrix", measure="lift")
plot(G_arulesViz_sub1, method="matrix", measure=c("lift", "confidence"))
plot(G_arulesViz_sub1, method="matrix3D", measure="lift")
plot(G_arulesViz_sub1, method="grouped")
G_arulesViz_sub2 <- head(sort(G_arulesViz_sub, by="lift"),10)
G_arulesViz_sub2 <- head(sort(G_arulesViz, by="lift"),10)
plot(G_arulesViz_sub2, method="graph", control=list(type="items"))
library(arules)
library(arulesSequences)
library(arulesViz)
plot(G_arulesViz,interactive=TRUE)
plot(G_arulesViz, measure=c("support", "lift"), shading="confidence", interactive=TRUE)
library(arules)
data(Groceries)
? Groceries
library(arules)
library(arulesSequences)
data(zaki)
str(zaki)
summary(zaki)
inspect(head(zaki))
#===============================#
# 02. 분류분석 (Classification) #
#===============================#
############################
# 5. party 패키지 분석 사례 #
############################
# (a) data load
install.packages("HDclassif")
library(HDclassif)
data(wine)
head(wine)
str(wine)
# (b) factorize the target variable
wine$class<-factor(wine$class)
table(wine$class)
# (c) data 분리
set.seed(2020)
ind<-sample(2,nrow(wine),replace=TRUE, prob=c(0.7,0.3))
table(ind)
tr_wine<-wine[ind==1,]
val_wine<-wine[ind==2,]
str(tr_wine)
# (d) 패키지 설치 및 load
install.packages("party")
library(party)
# (e) Training model
mdl_party<-ctree(class~., data=tr_wine)
str(mdl_party)
mdl_party@tree # model (text)
mdl_party@where # node of train set
mdl_party@get_where(newdata=tt_wine) # node of validation set
# (f) Visulization
plot(mdl_party)
plot(mdl_party,terminal_panel = node_barplot)
plot(mdl_party,type = "simple")
plot(mdl_party,terminal_panel = node_terminal)
# (g) performance check - train set
res_tr<-table(predict(mdl_party),tr_wine$class)
res_tr/sum(res_tr)
# Accuracy
sum(diag(res_tr))/sum(res_tr)
# precision
res_tr[1,1]/sum(res_tr[1,])
res_tr[2,2]/sum(res_tr[2,])
res_tr[3,3]/sum(res_tr[3,])
# detect rate(sensitivity)
res_tr[1,1]/sum(res_tr[,1])
res_tr[2,2]/sum(res_tr[,2])
res_tr[3,3]/sum(res_tr[,3])
# (h) performance - validation set
res_val<-table(predict(mdl_party,newdata=val_wine),val_wine$class)
res_val/sum(res_val)
# Accuracy
sum(diag(res_val))/sum(res_val)
# precision
res_val[1,1]/sum(res_val[1,])
res_val[2,2]/sum(res_val[2,])
res_val[3,3]/sum(res_val[3,])
# detect rate
res_val[1,1]/sum(res_val[,1])
res_val[2,2]/sum(res_val[,2])
res_val[3,3]/sum(res_val[,3])
data(wine)
head(wine)
str(wine)
wine$class<-factor(wine$class)
table(wine$class)
set.seed(2020)
ind<-sample(2,nrow(wine),replace=TRUE, prob=c(0.7,0.3))
table(ind)
tr_wine<-wine[ind==1,]
val_wine<-wine[ind==2,]
str(tr_wine)
install.packages("party")
mdl_party<-ctree(class~., data=tr_wine)
str(mdl_party)
mdl_party@tree # model (text)
mdl_party@where # node of train set
mdl_party@get_where(newdata=val_wine) # node of validation set
plot(mdl_party)
plot(mdl_party,terminal_panel = node_barplot)
plot(mdl_party,type = "simple")
plot(mdl_party,terminal_panel = node_terminal)
res_tr<-table(predict(mdl_party),tr_wine$class)
res_tr/sum(res_tr)
sum(diag(res_tr))/sum(res_tr)
# precision
res_tr[1,1]/sum(res_tr[1,])
res_tr[2,2]/sum(res_tr[2,])
res_tr[3,3]/sum(res_tr[3,])
res_tr[1,1]/sum(res_tr[,1])
res_tr[2,2]/sum(res_tr[,2])
res_tr[3,3]/sum(res_tr[,3])
res_val<-table(predict(mdl_party,newdata=val_wine),val_wine$class)
res_val/sum(res_val)
sum(diag(res_val))/sum(res_val)
# precision
res_val[1,1]/sum(res_val[1,])
res_val[2,2]/sum(res_val[2,])
res_val[3,3]/sum(res_val[3,])
res_val[1,1]/sum(res_val[,1])
res_val[2,2]/sum(res_val[,2])
res_val[3,3]/sum(res_val[,3])
x1<-c(1,2)
x2<-c(1,3)
x3<-c(3,6)
x4<-c(4,7)
x5<-c(1,5)
x<-t(data.frame(x1,x2,x3,x4,x5))
? dist
(euc_dist<-dist(x,method="euclidean"))
(che_dist<-dist(x,method="maximum"))
(man_dist<-dist(x,method="manhattan"))
(can_dist<-dist(x,method="canberra"))
(min_dist<-dist(x,method="minkowski"))
sin_den<-hclust(euc_dist^2,method="single")
plot(sin_den, main="Cluster Dendrogram - single")
com_den<-hclust(euc_dist^2,method="complete")
plot(com_den, main="Cluster Dendrogram - complete")
avg_den<-hclust(euc_dist^2,method="average")
plot(avg_den, main="Cluster Dendrogram - average")
med_den<-hclust(euc_dist^2,method="median")
plot(med_den, main="Cluster Dendrogram - median")
cen_den<-hclust(euc_dist^2,method="centroid")
plot(cen_den, main="Cluster Dendrogram - centroid")
war_den<-hclust(euc_dist^2,method="ward")
plot(war_den, main="Cluster Dendrogram - ward")
war_den<-hclust(euc_dist^2,method="ward.D")
plot(war_den, main="Cluster Dendrogram - ward.D")
library(HDclassif)
data(wine)
(k_wine <- kmeans(wine[,-c(1)],3))
table(k_wine$cluster,wine$class)
plot(wine[,c("V1","V13")], col=k_wine$cluster)
points(k_wine$centers[,c("V1","V13")],col=1:3,pch=8,cex=2)
wine_s<-scale(wine[,-c(1)])
(k_wine_s <- kmeans(wine_s,3))
table(k_wine_s$cluster,wine$class)
plot(wine_s[,c("V1","V13")], col=k_wine_s$cluster)
points(k_wine_s$centers[,c("V1","V13")],col=1:3,pch=8,cex=2)
k_wine_res<-wine
k_wine_res$clst_s<-k_wine_s$cluster
table(k_wine_res$clst_s)
ind<-which(k_wine_res$clst_s==1)
summary(k_wine_res[ind,])
table(k_wine_res[ind,"class"])
install.packages("cluster")
library(cluster)
(pam_wine <- pam(wine[,-c(1)],3))
table(pam_wine$cluster,wine$class)
plot(wine[,c("V1","V13")], col=pam_wine$cluster)
points(pam_wine$medoids[,c("V1","V13")],col=1:3,pch=8,cex=2)
pam_wine_s <- pam(wine_s,3)
table(pam_wine_s$cluster,wine$class)
plot(wine_s[,c("V1","V13")], col=pam_wine_s$cluster)
points(pam_wine_s$medoids[,c("V1","V13")],col=1:3,pch=8,cex=2)
library(fpc)
(den_wine_s <- dbscan(wine_s, eps=2.6, MinPts=10, scale=TRUE))
table(den_wine_s$cluster,wine$class)
(den_wine_s1 <- dbscan(wine_s, eps=2.5, MinPts=8, scale=TRUE))
table(den_wine_s1$cluster,wine$class)
str(den_wine_s1)
plot(den_wine_s,wine_s[,c("V1","V13")])
## (4) Fuzzy Clustering
set.seed(2014)
f1<-cbind(rnorm(10, -5, 0.5), rnorm(10, -5, 0.5))
f2<-cbind(rnorm(10, 5, 0.5), rnorm(10, 5, 0.5))
f3<-cbind(rnorm(5, 0.5*1.67, 0.5), rnorm(5, 0.5*1.67, 0.5))
f<-rbind(f1,f2,f3)
(fuz_f_2 <- fanny(f,2))
(fuz_f_3 <- fanny(f,3))
plot(fuz_f_2)
wss<-0
for(i in 1:15) wss[i]<-kmeans(wine_s,centers=i)$tot.withinss
plot(1:15,wss,type="b",xlab="Number of Cluster", ylab="Within group sum of squares")
library(arules)
data(Groceries)
str(Groceries)
table(Groceries@data@i)
table(Groceries@data@Dim)
head(Groceries@itemInfo)
summary(Groceries)
inspect(head(Groceries))
length(Groceries)
nrow(Groceries)
ncol(Groceries)
G_arules<-apriori(Groceries, parameter=list(support=0.01, confidence=0.3))
summary(G_arules)
str(G_arules)
inspect(head(G_arules))
summary(G_arules@quality$lift)
(G_arules_yogurt <- subset(G_arules, subset = rhs %in% "yogurt" & lift > 2))
inspect(G_arules_yogurt)
inspect(G_arules_yogurt@lhs)
(G_arules_root_vegetables <- subset(G_arules, subset = rhs %in% "root vegetables" & lift > 2))
inspect(G_arules_root_vegetables)
inspect(head(sort(G_arules_yogurt, by = "confidence"), n = 3))
inspect(head(sort(G_arules_yogurt, by = "support"), n = 3))
install.packages("arulesSequences")
library(arulesSequences)
data(zaki)
summary(zaki)
? zaki
str(zaki)
inspect(head(zaki))
as(zaki,"data.frame")
length(zaki)
ncol(zaki)
z_arules_Seq <- cspade(zaki, parameter = list(support=0.4),control=list(verbose=TRUE))
str(z_arules_Seq)
summary(z_arules_Seq)
as(z_arules_Seq,"data.frame")
install.packages("arulesViz")
library(arulesViz)
G_arulesViz<-apriori(Groceries, parameter=list(support=0.005, confidence=0.3))
G_arulesViz
inspect(head(G_arulesViz,by="confidence"))
plot(G_arulesViz)
plot(G_arulesViz,interactive=TRUE)
plot(G_arulesViz, measure=c("support", "lift"), shading="confidence", interactive=TRUE)
G_arulesViz_sub1 <- G_arulesViz[quality(G_arulesViz)$confidence > 0.5]
G_arulesViz_sub1
plot(G_arulesViz_sub1, method="matrix", measure="lift")
plot(G_arulesViz_sub1, method="matrix", measure=c("lift", "confidence"))
plot(G_arulesViz_sub1, method="matrix3D", measure="lift")
plot(G_arulesViz_sub1, method="grouped")
G_arulesViz_sub2 <- head(sort(G_arulesViz, by="lift"),10)
plot(G_arulesViz_sub2, method="graph", control=list(type="items"))
